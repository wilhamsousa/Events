// <auto-generated />
using System;
using Infra.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Repository.Migrations
{
    [DbContext(typeof(EventContext))]
    [Migration("20210727134637_guest")]
    partial class guest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Model.Entity.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("PriceWithDrink")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("PriceWithoutDrink")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41fc88fd-849e-49d1-bd39-e251d872cb90"),
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Churrasco de aniversariantes do mês",
                            PriceWithDrink = 100m,
                            PriceWithoutDrink = 50m
                        });
                });

            modelBuilder.Entity("Domain.Model.Entity.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Payment")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7df2d51f-7f53-4f84-865a-bd27a3f9323d"),
                            EventId = new Guid("41fc88fd-849e-49d1-bd39-e251d872cb90"),
                            Name = "Participante teste"
                        });
                });

            modelBuilder.Entity("Domain.Model.Entity.Guest", b =>
                {
                    b.HasOne("Domain.Model.Entity.Event", "Event")
                        .WithMany("Guest")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_Guest_Event")
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Domain.Model.Entity.Event", b =>
                {
                    b.Navigation("Guest");
                });
#pragma warning restore 612, 618
        }
    }
}
